/shop-owners:
  post:
    tags: [shop-owners]
    summary: 店舗オーナー登録
    description: 新しい店舗オーナーを登録し、同時に店舗も作成します。
    operationId: registerShopOwner
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/shop-owner.yaml#/components/schemas/RegisterShopOwnerRequest'
          examples:
            basic:
              value:
                name: '山田太郎'
                email: 'taro@example.com'
                password: 'password123'
                shopName: 'フルプラ下北沢店'
                reading: 'やまだたろう'
                areaId: 'area_tokyo_shimokita'
    responses:
      '201':
        description: 登録成功
        content:
          application/json:
            schema:
              $ref: '../schemas/shop-owner.yaml#/components/schemas/RegisterShopOwnerResponse'
            examples:
              ok:
                value:
                  id: 'owner_123'
                  name: '山田太郎'
                  email: 'taro@example.com'
                  role: 'shop'
                  shopId: 'shop_456'
      '400':
        $ref: '../../../shared/responses/common.yaml#/components/responses/BadRequest'
      '500':
        $ref: '../../../shared/responses/common.yaml#/components/responses/InternalServerError'

  get:
    tags: [shop-owners]
    summary: ショップオーナー一覧取得
    description: すべてのショップオーナーを返します（パスワードは含みません）。
    operationId: adminGetShopOwners
    responses:
      '200':
        description: 取得成功
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '../schemas/shop-owner.yaml#/components/schemas/ShopOwnerListItem'
      '400':
        $ref: '../../../shared/responses/common.yaml#/components/responses/BadRequest'
      '500':
        $ref: '../../../shared/responses/common.yaml#/components/responses/InternalServerError'

/shop-owners/{shopId}:
  # パス変数はここで1回だけ定義（重複回避）
  parameters:
    - in: path
      name: shopId
      required: true
      schema: { type: string }
      description: ショップオーナーID

  get:
    tags: [shop-owners]
    summary: ショップオーナー詳細取得
    description: 指定IDのショップオーナーを返します（関連Shopも含みます）。
    operationId: adminGetShopOwnerById
    responses:
      '200':
        description: 取得成功
        content:
          application/json:
            schema:
              $ref: '../schemas/shop-owner.yaml#/components/schemas/ShopOwnerDetail'
      '404':
        $ref: '../../../shared/responses/common.yaml#/components/responses/NotFound'
      '500':
        $ref: '../../../shared/responses/common.yaml#/components/responses/InternalServerError'

  put:
    tags: [shop-owners]
    summary: ショップオーナー更新（管理者）
    description: 管理者が任意のショップオーナー情報を更新します。
    operationId: adminUpdateShopOwner
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/shop-owner.yaml#/components/schemas/ShopOwnerAdminUpdateRequest'
    responses:
      '200':
        description: 更新成功
        content:
          application/json:
            schema:
              $ref: '../schemas/shop-owner.yaml#/components/schemas/ShopOwnerDetail'
      '404':
        $ref: '../../../shared/responses/common.yaml#/components/responses/NotFound'
      '500':
        $ref: '../../../shared/responses/common.yaml#/components/responses/InternalServerError'

  delete:
    tags: [shop-owners]
    summary: ショップオーナー削除（管理者）
    description: 指定したショップオーナーおよび関連リソースを削除します。
    operationId: adminDeleteShopOwner
    responses:
      '200':
        description: 削除成功
        content:
          application/json:
            schema:
              type: object
              required: [message]
              properties:
                message:
                  type: string
                  example: ショップオーナー、および関連するショップ、バランス、トランザクション、通知を全て削除しました
      '404':
        $ref: '../../../shared/responses/common.yaml#/components/responses/NotFound'
      '500':
        $ref: '../../../shared/responses/common.yaml#/components/responses/InternalServerError'

/shop-owners/by-shop/{shopId}:
  parameters:
    - in: path
      name: shopId
      required: true
      schema: { type: string }
      description: ショップID

  get:
    tags: [shop-owners]
    summary: 店舗IDからショップオーナー取得
    description: 指定した shopId に紐づくショップオーナーを返します。
    operationId: adminGetShopOwnerByShopId
    responses:
      '200':
        description: 取得成功
        content:
          application/json:
            schema:
              $ref: '../schemas/shop-owner.yaml#/components/schemas/ShopOwnerDetail'
      '404':
        $ref: '../../../shared/responses/common.yaml#/components/responses/NotFound'
      '500':
        $ref: '../../../shared/responses/common.yaml#/components/responses/InternalServerError'
