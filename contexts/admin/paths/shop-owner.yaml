/shop-owners:
  post:
    tags: shop-owners
    summary: 店舗オーナー登録
    description: 新しい店舗オーナーを登録し、同時に店舗も作成します。
    operationId: registerShopOwner
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisterShopOwnerRequest'
          examples:
            basic:
              value:
                name: '山田太郎'
                email: 'taro@example.com'
                password: 'password123'
                shopName: 'フルプラ下北沢店'
                reading: 'やまだたろう'
                areaId: 'area_tokyo_shimokita'
    responses:
      '201':
        description: 登録成功
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterShopOwnerResponse'
            examples:
              ok:
                value:
                  id: 'owner_123'
                  name: '山田太郎'
                  email: 'taro@example.com'
                  role: 'shop'
                  shopId: 'shop_456'
      '400':
        description: 既に同じメールアドレスが存在する場合
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
              required:
                - message
            examples:
              duplicate:
                value:
                  message: '既に同じメールアドレスの店舗オーナーが登録されています'
      '500':
        description: サーバーエラー
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
              required:
                - message
  get:
    tags: shop-owners
    summary: ショップオーナー一覧取得
    description: すべてのショップオーナーを返します（パスワードは含みません）。
    operationId: adminGetShopOwners
    responses:
      '200':
        description: 取得成功
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '../schemas/shop-owner.yaml#/components/schemas/ShopOwnerListItem'
      '500':
        $ref: '../../../shared/responses/common.yaml#/components/responses/InternalServerError'

/shop-owners/{id}:
  get:
    tags: shop-owners
    summary: ショップオーナー詳細取得
    description: 指定IDのショップオーナーを返します（関連Shopも含みます）。
    operationId: adminGetShopOwnerById
    parameters:
      - in: path
        name: id
        required: true
        schema: { type: string }
        description: ショップオーナーID
    responses:
      '200':
        description: 取得成功
        content:
          application/json:
            schema:
              $ref: '../schemas/shop-owner.yaml#/components/schemas/ShopOwnerDetail'
      '404':
        $ref: '../../../shared/responses/common.yaml#/components/responses/NotFound'
      '500':
        $ref: '../../../shared/responses/common.yaml#/components/responses/InternalServerError'
