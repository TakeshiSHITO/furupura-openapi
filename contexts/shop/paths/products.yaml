/products:
  get:
    tags:
      - products
    summary: 商品一覧取得
    description: ショップの商品一覧を取得します。カテゴリやステータスでフィルタリング可能です。
    operationId: listProducts
    parameters:
      - $ref: '../../../shared/parameters/common.yaml#/components/parameters/PageParam'
      - $ref: '../../../shared/parameters/common.yaml#/components/parameters/PerPageParam'
      - $ref: '../../../shared/parameters/common.yaml#/components/parameters/SearchParam'
      - name: category_id
        in: query
        schema:
          type: string
      - name: status
        in: query
        schema:
          type: string
          enum:
            - active
            - inactive
            - draft
    responses:
      '200':
        description: 商品一覧
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '../schemas/product.yaml#/components/schemas/Product'
                pagination:
                  $ref: '../../../shared/schemas/common.yaml#/components/schemas/Pagination'
      '400':
        $ref: '../../../shared/responses/common.yaml#/components/responses/BadRequest'
      '401':
        $ref: '../../../shared/responses/common.yaml#/components/responses/Unauthorized'

  post:
    tags:
      - products
    summary: 商品登録
    description: 新しい商品を登録します。画像URLや在庫数も同時に設定できます。
    operationId: createProduct
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/product.yaml#/components/schemas/ProductCreateRequest'
    responses:
      '201':
        description: 商品登録成功
        content:
          application/json:
            schema:
              $ref: '../schemas/product.yaml#/components/schemas/Product'
      '400':
        $ref: '../../../shared/responses/common.yaml#/components/responses/BadRequest'
      '401':
        $ref: '../../../shared/responses/common.yaml#/components/responses/Unauthorized'

/products/{productId}:
  get:
    tags:
      - products
    summary: 商品詳細取得
    description: 指定した商品の詳細情報を取得します。
    operationId: getProduct
    parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: 商品詳細
        content:
          application/json:
            schema:
              $ref: '../schemas/product.yaml#/components/schemas/Product'
      '404':
        $ref: '../../../shared/responses/common.yaml#/components/responses/NotFound'
