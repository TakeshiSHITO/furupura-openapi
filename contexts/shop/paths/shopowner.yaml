/auth:
  post:
    tags:
      - ShopOwner
    summary: ショップオーナー認証
    description: ショップオーナーのログイン認証を行います。正しいメールアドレスとパスワードでログインできます。
    operationId: authShopOwner
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
                description: ショップオーナーのメールアドレス
                example: shop@example.com
              password:
                type: string
                description: パスワード
                example: password123
            required: [email, password]
    responses:
      '200':
        description: 認証成功
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ショップオーナーID
                  example: 1
                name:
                  type: string
                  description: ショップオーナー名
                  example: 田中太郎
                email:
                  type: string
                  format: email
                  description: メールアドレス
                  example: shop@example.com
                role:
                  type: string
                  description: ユーザーの役割
                  example: shop
                shopId:
                  type: integer
                  description: ショップID
                  example: 1
                slug:
                  type: string
                  description: ショップスラッグ
                  example: myShop
                serialPrinter:
                  type: [string, 'null']
                  description: シリアルプリンター設定
                  example: COM1
                bluetoothPrinter:
                  type: [string, 'null']
                  description: Bluetoothプリンター設定
                  example: Printer-001
              required: [id, name, email, role, shopId, slug]
      '401':
        description: 認証失敗
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: メールアドレスまたはパスワードが正しくありません
              required: [message]
      '500':
        description: サーバーエラー
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: サーバーエラーが発生しました
              required: [message]

/register:
  post:
    tags:
      - ShopOwner
    summary: ショップオーナー新規登録
    description: 新しいショップオーナーとショップの登録を行います。同時にショップも作成されます。
    operationId: registerShopOwner
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: ショップオーナー名
                example: 田中太郎
              email:
                type: string
                format: email
                description: メールアドレス
                example: shop@example.com
              password:
                type: string
                description: パスワード
                example: password123
              shopName:
                type: string
                description: ショップ名
                example: マイショップ
              reading:
                type: string
                description: ショップ名の読み仮名
                example: まいしょっぷ
              areaId:
                type: integer
                description: エリアID
                example: 1
            required: [name, email, password, shopName, areaId]
    responses:
      '201':
        description: 登録成功
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ショップオーナーID
                  example: 1
                name:
                  type: string
                  description: ショップオーナー名
                  example: 田中太郎
                email:
                  type: string
                  format: email
                  description: メールアドレス
                  example: shop@example.com
                role:
                  type: string
                  description: ユーザーの役割
                  example: shop
                shopId:
                  type: integer
                  description: ショップID
                  example: 1
              required: [id, name, email, role, shopId]
      '400':
        description: バリデーションエラー
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 既に同じメールアドレスの店舗オーナーが登録されています
              required: [message]
      '500':
        description: サーバーエラー
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: サーバーエラーが発生しました
              required: [message]

/logout:
  post:
    tags:
      - ShopOwner
    summary: ショップオーナーログアウト
    description: ショップオーナーのログアウトを行います。Cookieを削除してセッションを終了します。
    operationId: logoutShopOwner
    responses:
      '200':
        description: ログアウト成功
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Logged out seccessfully
              required: [message]

/shopOwners:
  get:
    tags:
      - ShopOwner
    summary: ショップオーナー一覧取得
    description: 全てのショップオーナーの一覧を取得します。パスワード情報は除外され、ショップ情報も含まれます。
    operationId: getShopOwners
    responses:
      '200':
        description: ショップオーナー一覧取得成功
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    description: ショップオーナーID
                    example: 1
                  name:
                    type: string
                    description: ショップオーナー名
                    example: 田中太郎
                  email:
                    type: string
                    format: email
                    description: メールアドレス
                    example: shop@example.com
                  shopId:
                    type: integer
                    description: ショップID
                    example: 1
                  serialPrinter:
                    type: [string, 'null']
                    description: シリアルプリンター設定
                    example: COM1
                  bluetoothPrinter:
                    type: [string, 'null']
                    description: Bluetoothプリンター設定
                    example: Printer-001
                  createdAt:
                    type: string
                    format: date-time
                    description: 作成日時
                    example: 2024-01-01T00:00:00Z
                  updatedAt:
                    type: string
                    format: date-time
                    description: 更新日時
                    example: 2024-01-01T00:00:00Z
                  Shop:
                    type: object
                    description: ショップ情報
                    properties:
                      id:
                        type: integer
                        description: ショップID
                        example: 1
                      name:
                        type: string
                        description: ショップ名
                        example: マイショップ
                      slug:
                        type: string
                        description: ショップスラッグ
                        example: my-shop
                      areaId:
                        type: integer
                        description: エリアID
                        example: 1
                      createdAt:
                        type: string
                        format: date-time
                        description: 作成日時
                        example: 2024-01-01T00:00:00Z
                      updatedAt:
                        type: string
                        format: date-time
                        description: 更新日時
                        example: 2024-01-01T00:00:00Z
                    required: [id, name, slug, areaId]
                required: [id, name, email, shopId, Shop]
      '500':
        description: サーバーエラー
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: サーバーエラーが発生しました
              required: [message]

/shopOwners/{id}:
  get:
    tags:
      - ShopOwner
    summary: ショップオーナー詳細取得
    description: 指定したIDのショップオーナーの詳細情報を取得します。パスワード情報は除外され、ショップ情報も含まれます。
    operationId: getShopOwnerById
    parameters:
      - name: id
        in: path
        required: true
        description: ショップオーナーID
        schema:
          type: string
    responses:
      '200':
        description: ショップオーナー詳細取得成功
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ショップオーナーID
                  example: 1
                name:
                  type: string
                  description: ショップオーナー名
                  example: 田中太郎
                email:
                  type: string
                  format: email
                  description: メールアドレス
                  example: shop@example.com
                shopId:
                  type: integer
                  description: ショップID
                  example: 1
                serialPrinter:
                  type: [string, 'null']
                  description: シリアルプリンター設定
                  example: COM1
                bluetoothPrinter:
                  type: [string, 'null']
                  description: Bluetoothプリンター設定
                  example: Printer-001
                createdAt:
                  type: string
                  format: date-time
                  description: 作成日時
                  example: 2024-01-01T00:00:00Z
                updatedAt:
                  type: string
                  format: date-time
                  description: 更新日時
                  example: 2024-01-01T00:00:00Z
                Shop:
                  type: object
                  description: ショップ情報
                  properties:
                    id:
                      type: integer
                      description: ショップID
                      example: 1
                    name:
                      type: string
                      description: ショップ名
                      example: マイショップ
                    slug:
                      type: string
                      description: ショップスラッグ
                      example: my-shop
                    areaId:
                      type: integer
                      description: エリアID
                      example: 1
                    createdAt:
                      type: string
                      format: date-time
                      description: 作成日時
                      example: 2024-01-01T00:00:00Z
                    updatedAt:
                      type: string
                      format: date-time
                      description: 更新日時
                      example: 2024-01-01T00:00:00Z
                  required: [id, name, slug, areaId]
              required: [id, name, email, shopId, Shop]
      '404':
        description: ショップオーナーが見つかりません
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: ショップオーナーが見つかりません
              required: [message]
      '500':
        description: サーバーエラー
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: サーバーエラーが発生しました
              required: [message]

  put:
    tags:
      - ShopOwner
    summary: ショップオーナー情報更新
    description: 指定したIDのショップオーナーの情報を更新します。更新したいフィールドのみ送信してください。
    operationId: updateShopOwner
    parameters:
      - name: id
        in: path
        required: true
        description: ショップオーナーID
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: ショップオーナー名
                example: 田中太郎
              email:
                type: string
                format: email
                description: メールアドレス
                example: shop@example.com
              password:
                type: string
                description: 新しいパスワード
                example: newPassword123
              phoneNumber:
                type: string
                description: 電話番号
                example: 090-1234-5678
              serialPrinter:
                type: string
                description: シリアルプリンター設定
                example: COM1
              bluetoothPrinter:
                type: string
                description: Bluetoothプリンター設定
                example: Printer-001
              address:
                type: object
                description: 住所情報
                properties:
                  postalCode:
                    type: string
                    description: 郵便番号
                    example: 123-4567
                  prefecture:
                    type: string
                    description: 都道府県
                    example: 東京都
                  city:
                    type: string
                    description: 市区町村
                    example: 渋谷区
                  streetAddress:
                    type: string
                    description: 番地
                    example: 1-2-3
                  buildingName:
                    type: string
                    description: 建物名
                    example: ABCビル4階
    responses:
      '200':
        description: ショップオーナー更新成功
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ショップオーナーID
                  example: 1
                name:
                  type: string
                  description: ショップオーナー名
                  example: 田中太郎
                email:
                  type: string
                  format: email
                  description: メールアドレス
                  example: shop@example.com
                shopId:
                  type: integer
                  description: ショップID
                  example: 1
                phoneNumber:
                  type: [string, 'null']
                  description: 電話番号
                  example: 090-1234-5678
                postalCode:
                  type: [string, 'null']
                  description: 郵便番号
                  example: 123-4567
                prefecture:
                  type: [string, 'null']
                  description: 都道府県
                  example: 東京都
                city:
                  type: [string, 'null']
                  description: 市区町村
                  example: 渋谷区
                streetAddress:
                  type: [string, 'null']
                  description: 番地
                  example: 1-2-3
                buildingName:
                  type: [string, 'null']
                  description: 建物名
                  example: ABCビル4階
                serialPrinter:
                  type: [string, 'null']
                  description: シリアルプリンター設定
                  example: COM1
                bluetoothPrinter:
                  type: [string, 'null']
                  description: Bluetoothプリンター設定
                  example: Printer-001
                createdAt:
                  type: string
                  format: date-time
                  description: 作成日時
                  example: 2024-01-01T00:00:00Z
                updatedAt:
                  type: string
                  format: date-time
                  description: 更新日時
                  example: 2024-01-01T00:00:00Z
              required: [id, name, email, shopId]
      '404':
        description: ショップオーナーが見つかりません
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: ショップオーナーが見つかりません
              required: [message]
      '500':
        description: サーバーエラー
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: サーバーエラーが発生しました
              required: [message]

  delete:
    tags:
      - ShopOwner
    summary: ショップオーナー削除
    description: 指定したIDのショップオーナーを削除します。関連するショップ、バランス、トランザクション、通知も全て削除されます。
    operationId: deleteShopOwner
    parameters:
      - name: id
        in: path
        required: true
        description: ショップオーナーID
        schema:
          type: string
    responses:
      '200':
        description: ショップオーナー削除成功
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: ショップオーナー、および関連するショップ、バランス、トランザクション、通知を全て削除しました
              required: [message]
      '404':
        description: ショップオーナーが見つかりません
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: ショップオーナーが見つかりません
              required: [message]
      '500':
        description: サーバーエラー
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: サーバーエラーが発生しました
              required: [message]

/shop/{shopId}/owner:
  get:
    tags:
      - ShopOwner
    summary: ショップIDでショップオーナー取得
    description: 指定したショップIDに紐づくショップオーナーの情報を取得します。パスワード情報は除外されます。
    operationId: getShopOwnerByShopId
    parameters:
      - name: shopId
        in: path
        required: true
        description: ショップID
        schema:
          type: string
    responses:
      '200':
        description: ショップオーナー取得成功
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ショップオーナーID
                  example: 1
                name:
                  type: string
                  description: ショップオーナー名
                  example: 田中太郎
                email:
                  type: string
                  format: email
                  description: メールアドレス
                  example: shop@example.com
                shopId:
                  type: integer
                  description: ショップID
                  example: 1
                serialPrinter:
                  type: [string, 'null']
                  description: シリアルプリンター設定
                  example: COM1
                bluetoothPrinter:
                  type: [string, 'null']
                  description: Bluetoothプリンター設定
                  example: Printer-001
                createdAt:
                  type: string
                  format: date-time
                  description: 作成日時
                  example: 2024-01-01T00:00:00Z
                updatedAt:
                  type: string
                  format: date-time
                  description: 更新日時
                  example: 2024-01-01T00:00:00Z
              required: [id, name, email, shopId]
      '404':
        description: ショップオーナーが見つかりません
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: ショップオーナーが見つかりません
              required: [message]
      '500':
        description: サーバーエラー
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: サーバーエラーが発生しました
              required: [message]

/verifyPassword:
  post:
    tags:
      - ShopOwner
    summary: 現在のパスワード確認
    description: ショップオーナーの現在のパスワードが正しいかを確認します。認証が必要です。
    operationId: verifyCurrentPassword
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              password:
                type: string
                description: 確認したい現在のパスワード
                example: currentPassword123
            required: [password]
    responses:
      '200':
        description: パスワード確認成功
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Password verified
              required: [message]
      '401':
        description: パスワードが正しくありません
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 現在のパスワードが正しくありません
              required: [message]
      '500':
        description: サーバーエラー
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: サーバーエラーが発生しました
              required: [message]

/profile:
  put:
    tags:
      - ShopOwner
    summary: プロフィール更新
    description: ショップオーナーのプロフィール情報を更新します。認証が必要です。更新したいフィールドのみ送信してください。
    operationId: updateMyProfile
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: ショップオーナー名
                example: 田中太郎
              email:
                type: string
                format: email
                description: メールアドレス
                example: shop@example.com
              password:
                type: string
                description: 新しいパスワード
                example: newPassword123
              phoneNumber:
                type: string
                description: 電話番号
                example: 090-1234-5678
              postalCode:
                type: string
                description: 郵便番号
                example: 123-4567
              prefecture:
                type: string
                description: 都道府県
                example: 東京都
              city:
                type: string
                description: 市区町村
                example: 渋谷区
              streetAddress:
                type: string
                description: 番地
                example: 1-2-3
              buildingName:
                type: string
                description: 建物名
                example: ABCビル4階
    responses:
      '200':
        description: プロフィール更新成功
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ショップオーナーID
                  example: 1
                name:
                  type: string
                  description: ショップオーナー名
                  example: 田中太郎
                email:
                  type: string
                  format: email
                  description: メールアドレス
                  example: shop@example.com
                role:
                  type: string
                  description: ユーザーの役割
                  example: shop
                shopId:
                  type: integer
                  description: ショップID
                  example: 1
                phoneNumber:
                  type: [string, 'null']
                  description: 電話番号
                  example: 090-1234-5678
                postalCode:
                  type: [string, 'null']
                  description: 郵便番号
                  example: 123-4567
                prefecture:
                  type: [string, 'null']
                  description: 都道府県
                  example: 東京都
                city:
                  type: [string, 'null']
                  description: 市区町村
                  example: 渋谷区
                streetAddress:
                  type: [string, 'null']
                  description: 番地
                  example: 1-2-3
                buildingName:
                  type: [string, 'null']
                  description: 建物名
                  example: ABCビル4階
                serialPrinter:
                  type: [string, 'null']
                  description: シリアルプリンター設定
                  example: COM1
                bluetoothPrinter:
                  type: [string, 'null']
                  description: Bluetoothプリンター設定
                  example: Printer-001
                createdAt:
                  type: string
                  format: date-time
                  description: 作成日時
                  example: 2024-01-01T00:00:00Z
                updatedAt:
                  type: string
                  format: date-time
                  description: 更新日時
                  example: 2024-01-01T00:00:00Z
              required: [id, name, email, role, shopId]
      '404':
        description: ショップオーナーが見つかりません
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: ショップオーナーが見つかりません
              required: [message]
      '500':
        description: サーバーエラー
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: サーバーエラーが発生しました
              required: [message]
